# The seciton contains all the data used to properly configure the tool
[general]

# input file to load.
# If the path is relative, it is relative to this very file
# Ignored if a string template is provided from command line; likewise, it is ignored if
# template_string entry is provided here.
# Defult to input.txt
input_file = "example.jinja2"

# template_string = "Hello {{ model.name }}"
# File generated by the program. Ignored if "write_on_stdout" is specified either from the command line
# or in this file. The path is relative to the CWD
# Default to input file concatenated with ".out"
output_file_format = "example.txt"

# If true, we will write the generated file on the stdout rather than in its own file
# Overwrites output_file_format
# Default to false
write_on_stdout = false

# level used to write logs. If CRITICAL, no logs will be output unless critical
# Allowed values are the ones present in "logging" python library (e.g., INFO, DEBUG, CRITICAL)
# Defautl to "CRTIICAL"
log_level = "CRITICAL"

# string used by jinja2 to start a block
# Default to "{%"
block_start_string = "{%"

# string used by jinja2 to end a block
# Default to "%}"
block_end_string = "%}"

# string used by jinja2 to start a comment block
# Default to "{#"
comment_start_string = "{#"

# string used by jinja2 to end a comment block
# Default to "#}"
comment_end_string = "#}"

# string used by jinja2 to start an expression in jinja2
# Default to "{{"
expression_start_string = "{{"

# string used by jinja2 to end an expression in jinja2
# Default to "}}"
expression_end_string = "}}"

# string used by jinja2 to start a line statement
# Default to "#"
line_statement_prefix = "#"

# rerpesents the encoding of the input file. Used only if we are reading the template jinja2 from a file
# Default to "utf-8"
input_file_encoding = "utf-8"

# rerpesents the encoding of the output file. Used only if we are writing the output file.
# Default to "utf-8"
output_file_encoding = "utf-8"

# Add here the values you want to use in the jinj2 template.
# They are accessible from the "model" variable
[values]
name = "Pluto"

# Add here definitions of functions that you want to use in the jinja2 template.
# They are accessible simply by calling their name
[functions]

replace_with_a = "lambda x: 'a'"